name: Deploy.NR.Components

on:
  workflow_dispatch:
  repository_dispatch:
    types: [deploy-newrelic]

env:
  TF_WORKING_DIR: .github/newrelic
  TF_VERSION: ${{ vars.TF_MAIN_VERSION || '1.9.7' }}

jobs:
  terrform:
    name: Terraform Apply (New Relic)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false

      - name: Terraform Validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      - name: Terraform Plan (Check for Changes)
        id: plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          NEW_RELIC_API_KEY: ${{ secrets.NR_PLATFORM_US_USER_API_KEY }}
          NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
        run: |
          set +e
          terraform plan -detailed-exitcode -no-color -input=false
          exit_code=$?
          echo "Terraform plan exit code: $exit_code"
          echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
          exit 0

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          NEW_RELIC_API_KEY: ${{ secrets.NR_PLATFORM_US_USER_API_KEY }}
          NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
        run: terraform apply -auto-approve -input=false

      - name: Skip Apply (No changes)
        if: steps.plan.outputs.exit_code == '0'
        run: echo "✅ No changes detected — skipping Terraform apply."

      - name: Notify
        if: always()
        run: |
          echo "Deployment finished for $GITHUB_REF"

      - name: Trigger NR.Change.Tracking
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}
          repository: ${{ github.repository }}
          event-type: tracking-newrelic
          client-payload: |
            {
              "application_name": "${{ secrets.CONTAINER_NAME }}",
              "env": "prod",
              "region": "us",
              "sha": "${{ github.sha }}",
              "deeplink": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
              "version": "${{ github.event.inputs.version }}",
              "ref": "${{ github.event.client_payload.ref }}"
            }
