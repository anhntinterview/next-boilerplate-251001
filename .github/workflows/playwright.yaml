name: Playwirght E2E

on:
  workflow_call:
concurrency:
  group: playwright-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    strategy:
      fail-fast: false
      max-parallel: 9
      matrix:
        browser: [chromium]
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    timeout-minutes: 60
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

        # ✅ Cache npm + Playwright binaries to speed up install
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm ci

      - name: Install Chromium Browser
        run: npx playwright install chromium

      # ✅ Download pre-built app artifact if it exists (to skip rebuild)
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
        continue-on-error: true

      - name: Build the app for Playwright
        run: npm run build:playwright

      - name: Verify server startup
        run: |
          npm run start:playwright &
          sleep 5
          curl -v http://localhost:3001 || echo "App not responding"
          pkill -f "node .next/standalone/server.js" || true

      - name: Run Playwright test (shard ${{ matrix.shardIndex }}/${{ matrix.shardTotal }})
        run: npm run test:playwright -- --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} -c ./playwright.github.config.ts

      - name: Upload Playwright artifacts (Shard ${{ matrix.shardIndex }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts-shard-${{ matrix.shardIndex }}-run-${{ github.run_attempt }}
          path: test-results/
